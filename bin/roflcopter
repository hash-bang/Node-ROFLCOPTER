#!/usr/bin/env node
/**
* ROFLCopter Drone control
* @author Matt Carter <m@ttcarter.com>
* @url https://github.com/hash-bang/Node-ROFLCOPTER
* @package node-roflcopter
*/

var program = require('commander');
var arDrone = require('ar-drone');
var colors = require('colors');

console.log('ROFTCOPTER boot'.bold.blue);

program
	.version(require('../package').version)
	.option('--ip [address]', 'IP address or hostname to connect to (default: "192.168.1.1")', '192.168.1.1')
	.option('--fr, --framerate [rate]', 'The framerate to stream images (default: 5)', 5)
	.option('-d, --datafeed', 'Return live data')
	.option('-i, --input [driver]', 'The input driver to use (options: xbox360, keyboard, debug)', 'xbox360')
	.option('-do, --driveroptions [options]', 'Additional options to pass to the driver', '')
	.parse(process.argv);

var listen = 0; // Whether to listen to commands (auto enabled after listenWait)
var listenWait = 100;
var maxInt = 32768;

var driver = require('../drivers/' + program.input + '.js');
driver.program = program;

if (!driver.prepare())
	return;

console.log('Connecting to drone [' + program.ip + ']...');
var client  = arDrone.createClient({
	ip: program.ip,
	frameRate: program.frameRate
});

// Data feed tracking {{{
if (program.datafeed) {
	console.log('Enabling data feed'.bold.green);
	client.config({key: 'general:navdata_demo', value: 'TRUE', timeout: 1000}, function() {
		console.log('Drone data feed enabled'.green);
	});

	client
		.on('hovering', function(data) {
			console.log('onHovering'.underline.green, data);
		})
		.on('flying', function(data) {
			console.log('onFlying'.underline.green, data);
		})
		.on('landing', function(data) {
			console.log('onLanding'.underline.green, data);
		})
		.on('batteryChange', function(data) {
			console.log('onBatteryChange'.underline.green, data);
		})
		.on('altitudeChange', function(data) {
			console.log('onAltitudeChange'.underline.green, data);
		})
		.on('navdata', function(data) {
			console.log('navData'.underline.green, data);
		});
}
// }}}

driver.client = client;

var util = require('util');
var feeder = function() {
	console.log(util.inspect(client.navData.demo, {color: true}));
	setTimeout(feeder, 1000);
};
feeder();

setTimeout(function() {
	console.log('Waiting for commands'.blue);
	driver.listen();
}, listenWait);
